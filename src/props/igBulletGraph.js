$.ig.react.propTypes.shapes.igBulletGraphRange = {
	name: PropTypes.string,
	brush: PropTypes.string,
	outline: PropTypes.string,
	startValue: PropTypes.number,
	endValue: PropTypes.number,
	innerStartExtent: PropTypes.number,
	innerEndExtent: PropTypes.number,
	outerStartExtent: PropTypes.number,
	outerEndExtent: PropTypes.number,
	strokeThickness: PropTypes.number
}

$.ig.react.propTypes.igBulletGraph = {
	id: PropTypes.string.isRequired,
	width: PropTypes.oneOfType([
		PropTypes.string,
		PropTypes.number
	]),
	height: PropTypes.oneOfType([
		PropTypes.string,
		PropTypes.number
	]),
	ranges: PropTypes.arrayOf(
		PropTypes.shape($.ig.react.propTypes.shapes.igBulletGraphRange)
	),
	rangeToolTipTemplate: PropTypes.string,
	valueToolTipTemplate: PropTypes.string,
	targetValueToolTipTemplate: PropTypes.string,
	orientation: PropTypes.oneOf([
		"horizontal",
		"vertical"
	]),
	scaleBackgroundBrush: PropTypes.string,
	scaleBackgroundOutline: PropTypes.string,
	scaleBackgroundThickness: PropTypes.number,
	rangeBrushes: PropTypes.object,
	rangeOutlines: PropTypes.object,
	minimumValue: PropTypes.number,
	maximumValue: PropTypes.number,
	targetValue: PropTypes.number,
	targetValueName: PropTypes.string,
	value: PropTypes.number,
	valueName: PropTypes.string,
	rangeInnerExtent: PropTypes.number,
	rangeOuterExtent: PropTypes.number,
	valueInnerExtent: PropTypes.number,
	valueOuterExtent: PropTypes.number,
	interval: PropTypes.number,
	ticksPostInitial: PropTypes.number,
	ticksPreTerminal: PropTypes.number,
	labelInterval: PropTypes.number,
	labelExtent: PropTypes.number,
	labelsPostInitial: PropTypes.number,
	labelsPreTerminal: PropTypes.number,
	minorTickCount: PropTypes.number,
	tickStartExtent: PropTypes.number,
	tickEndExtent: PropTypes.number,
	tickStrokeThickness: PropTypes.number,
	tickBrush: PropTypes.string,
	fontBrush: PropTypes.string,
	valueBrush: PropTypes.string,
	valueOutline: PropTypes.string,
	valueStrokeThickness: PropTypes.number,
	minorTickStartExtent: PropTypes.number,
	minorTickEndExtent: PropTypes.number,
	minorTickStrokeThickness: PropTypes.number,
	minorTickBrush: PropTypes.string,
	isScaleInverted: PropTypes.bool,
	backingBrush: PropTypes.string,
	backingOutline: PropTypes.string,
	backingStrokeThickness: PropTypes.number,
	backingInnerExtent: PropTypes.number,
	backingOuterExtent: PropTypes.number,
	scaleStartExtent: PropTypes.number,
	scaleEndExtent: PropTypes.number,
	targetValueBrush: PropTypes.string,
	targetValueBreadth: PropTypes.number,
	targetValueInnerExtent: PropTypes.number,
	targetValueOuterExtent: PropTypes.number,
	targetValueOutline: PropTypes.string,
	targetValueStrokeThickness: PropTypes.number,
	transitionDuration: PropTypes.number,
	showToolTipTimeout: PropTypes.number,
	showToolTip: PropTypes.bool,
	font: PropTypes.string,
	pixelScalingRatio: PropTypes.number
}
