$.ig.react.propTypes.igShapeChart = {
	id: PropTypes.string.isRequired,
	shapeDataSource: PropTypes.string,
	databaseSource: PropTypes.string,
	triangulationDataSource: PropTypes.string,
	tooltipTemplate: PropTypes.object,
	tooltipTemplates: PropTypes.object,
	pixelScalingRatio: PropTypes.number,
	titleLeftMargin: PropTypes.number,
	titleRightMargin: PropTypes.number,
	titleTopMargin: PropTypes.number,
	titleBottomMargin: PropTypes.number,
	subtitleLeftMargin: PropTypes.number,
	subtitleTopMargin: PropTypes.number,
	subtitleRightMargin: PropTypes.number,
	subtitleBottomMargin: PropTypes.number,
	subtitleTextColor: PropTypes.string,
	titleTextColor: PropTypes.string,
	leftMargin: PropTypes.number,
	topMargin: PropTypes.number,
	rightMargin: PropTypes.number,
	bottomMargin: PropTypes.number,
	transitionDuration: PropTypes.number,
	transitionEasingFunction: PropTypes.object,
	createWrappedTooltip: PropTypes.object,
	widget: PropTypes.object,
	subtitleTextStyle: PropTypes.string,
	titleTextStyle: PropTypes.string,
	itemsSource: PropTypes.object,
	includedProperties: PropTypes.object,
	excludedProperties: PropTypes.object,
	brushes: PropTypes.object,
	outlines: PropTypes.object,
	legend: PropTypes.object,
	isHorizontalZoomEnabled: PropTypes.bool,
	isVerticalZoomEnabled: PropTypes.bool,
	isSeriesHighlightingEnabled: PropTypes.bool,
	windowRect: PropTypes.object,
	title: PropTypes.string,
	subtitle: PropTypes.string,
	titleAlignment: PropTypes.oneOf([
		"left",
		"center",
		"right",
		"stretch"
	]),
	subtitleAlignment: PropTypes.oneOf([
		"left",
		"center",
		"right",
		"stretch"
	]),
	unknownValuePlotting: PropTypes.oneOf([
		"linearInterpolate",
		"dontPlot"
	]),
	resolution: PropTypes.number,
	thickness: PropTypes.number,
	markerTypes: PropTypes.object,
	markerBrushes: PropTypes.object,
	markerOutlines: PropTypes.object,
	markerMaxCount: PropTypes.number,
	animateSeriesWhenAxisRangeChanges: PropTypes.bool,
	trendLineBrushes: PropTypes.object,
	trendLineType: PropTypes.oneOf([
		"none",
		"linearFit",
		"quadraticFit",
		"cubicFit",
		"quarticFit",
		"quinticFit",
		"logarithmicFit",
		"exponentialFit",
		"powerLawFit",
		"simpleAverage",
		"exponentialAverage",
		"modifiedAverage",
		"cumulativeAverage",
		"weightedAverage"
	]),
	trendLineThickness: PropTypes.number,
	alignsGridLinesToPixels: PropTypes.bool,
	trendLinePeriod: PropTypes.number,
	toolTipType: PropTypes.oneOf([
		"default",
		"item",
		"category",
		"none"
	]),
	crosshairsDisplayMode: PropTypes.oneOf([
		"default",
		"none",
		"horizontal",
		"vertical",
		"both"
	]),
	crosshairsSnapToData: PropTypes.bool,
	crosshairsAnnotationEnabled: PropTypes.bool,
	finalValueAnnotationsVisible: PropTypes.bool,
	calloutsVisible: PropTypes.bool,
	calloutStyleUpdatingEventEnabled: PropTypes.bool,
	calloutsItemsSource: PropTypes.object,
	calloutsXMemberPath: PropTypes.string,
	calloutsYMemberPath: PropTypes.string,
	calloutsLabelMemberPath: PropTypes.string,
	calloutsContentMemberPath: PropTypes.string,
	xAxisFormatLabel: PropTypes.object,
	yAxisFormatLabel: PropTypes.object,
	xAxisLabelLeftMargin: PropTypes.number,
	xAxisLabelTopMargin: PropTypes.number,
	xAxisLabelRightMargin: PropTypes.number,
	xAxisLabelBottomMargin: PropTypes.number,
	yAxisLabelLeftMargin: PropTypes.number,
	yAxisLabelTopMargin: PropTypes.number,
	yAxisLabelRightMargin: PropTypes.number,
	yAxisLabelBottomMargin: PropTypes.number,
	xAxisLabelTextColor: PropTypes.string,
	yAxisLabelTextColor: PropTypes.string,
	xAxisTitleMargin: PropTypes.number,
	yAxisTitleMargin: PropTypes.number,
	xAxisTitleLeftMargin: PropTypes.number,
	yAxisTitleLeftMargin: PropTypes.number,
	xAxisTitleTopMargin: PropTypes.number,
	yAxisTitleTopMargin: PropTypes.number,
	xAxisTitleRightMargin: PropTypes.number,
	yAxisTitleRightMargin: PropTypes.number,
	xAxisTitleBottomMargin: PropTypes.number,
	yAxisTitleBottomMargin: PropTypes.number,
	xAxisTitleTextColor: PropTypes.string,
	yAxisTitleTextColor: PropTypes.string,
	xAxisLabelTextStyle: PropTypes.string,
	yAxisLabelTextStyle: PropTypes.string,
	xAxisTitleTextStyle: PropTypes.string,
	yAxisTitleTextStyle: PropTypes.string,
	xAxisLabel: PropTypes.object,
	yAxisLabel: PropTypes.object,
	xAxisMajorStroke: PropTypes.string,
	yAxisMajorStroke: PropTypes.string,
	xAxisMajorStrokeThickness: PropTypes.number,
	yAxisMajorStrokeThickness: PropTypes.number,
	xAxisMinorStrokeThickness: PropTypes.number,
	yAxisMinorStrokeThickness: PropTypes.number,
	xAxisStrip: PropTypes.string,
	yAxisStrip: PropTypes.string,
	xAxisStroke: PropTypes.string,
	yAxisStroke: PropTypes.string,
	xAxisStrokeThickness: PropTypes.number,
	yAxisStrokeThickness: PropTypes.number,
	xAxisTickLength: PropTypes.number,
	yAxisTickLength: PropTypes.number,
	xAxisTickStroke: PropTypes.string,
	yAxisTickStroke: PropTypes.string,
	xAxisTickStrokeThickness: PropTypes.number,
	yAxisTickStrokeThickness: PropTypes.number,
	xAxisTitle: PropTypes.string,
	yAxisTitle: PropTypes.string,
	xAxisMinorStroke: PropTypes.string,
	yAxisMinorStroke: PropTypes.string,
	xAxisLabelAngle: PropTypes.number,
	yAxisLabelAngle: PropTypes.number,
	xAxisExtent: PropTypes.number,
	yAxisExtent: PropTypes.number,
	xAxisTitleAngle: PropTypes.number,
	yAxisTitleAngle: PropTypes.number,
	xAxisInverted: PropTypes.bool,
	yAxisInverted: PropTypes.bool,
	xAxisTitleAlignment: PropTypes.oneOf([
		"left",
		"center",
		"right",
		"stretch"
	]),
	yAxisTitleAlignment: PropTypes.oneOf([
		"top",
		"center",
		"bottom",
		"stretch"
	]),
	xAxisLabelHorizontalAlignment: PropTypes.oneOf([
		"left",
		"center",
		"right",
		"stretch"
	]),
	yAxisLabelHorizontalAlignment: PropTypes.oneOf([
		"left",
		"center",
		"right",
		"stretch"
	]),
	xAxisLabelVerticalAlignment: PropTypes.oneOf([
		"top",
		"center",
		"bottom",
		"stretch"
	]),
	yAxisLabelVerticalAlignment: PropTypes.oneOf([
		"top",
		"center",
		"bottom",
		"stretch"
	]),
	xAxisLabelVisibility: PropTypes.oneOf([
		"visible",
		"collapsed"
	]),
	yAxisLabelVisibility: PropTypes.oneOf([
		"visible",
		"collapsed"
	]),
	yAxisLabelLocation: PropTypes.oneOf([
		"outsideTop",
		"outsideBottom",
		"outsideLeft",
		"outsideRight",
		"insideTop",
		"insideBottom",
		"insideLeft",
		"insideRight"
	]),
	xAxisInterval: PropTypes.number,
	xAxisMinorInterval: PropTypes.number,
	yAxisInterval: PropTypes.number,
	yAxisIsLogarithmic: PropTypes.bool,
	yAxisLogarithmBase: PropTypes.number,
	yAxisMinimumValue: PropTypes.number,
	yAxisMaximumValue: PropTypes.number,
	yAxisMinorInterval: PropTypes.number,
	xAxisIsLogarithmic: PropTypes.bool,
	xAxisLogarithmBase: PropTypes.number,
	xAxisMinimumValue: PropTypes.number,
	xAxisMaximumValue: PropTypes.number,
	xAxisAbbreviateLargeNumbers: PropTypes.bool,
	yAxisAbbreviateLargeNumbers: PropTypes.bool,
	markerCollision: PropTypes.oneOf([
		"none",
		"omit",
		"fade",
		"omitAndShift",
		"fadeAndShift"
	]),
	chartType: PropTypes.oneOf([
		"auto",
		"point",
		"line",
		"spline",
		"bubble",
		"highDensity",
		"area",
		"contour",
		"polygon",
		"polyline"
	]),
	width: PropTypes.number,
	height: PropTypes.number,
	maxRecCount: PropTypes.number,
	dataSource: PropTypes.object,
	dataSourceType: PropTypes.string,
	dataSourceUrl: PropTypes.string,
	responseTotalRecCountKey: PropTypes.string,
	responseDataKey: PropTypes.string
}
